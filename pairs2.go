package main

import "fmt"

const (
	mod = 1000000007
)

func pairs(A []int, B int) int {
	n := len(A)

	i := 0
	j := n - 1

	count := 0

	for i < j {
		fmt.Println(i, j)
		if A[i]+A[j] > B {
			j--
		} else if A[i]+A[j] < B {
			i++
		} else if A[i] == A[j] {
			n := j - i
			n = (n * (n + 1) / 2) % mod
			count = (count + n) % mod
			break
		} else {
			tempI := 1
			tempJ := 1

			for i < j && A[i] == A[i+1] {
				tempI++
				i++
			}
			i++
			for j > i && A[j] == A[j-1] {
				tempJ++
				j--
			}
			j--
			count += (tempI * tempJ) % mod
		}
	}

	return count
}

func main() {
	A := []int{}
	fmt.Println(pairs(A, 9259332))
}
